@model WorldLibrary.Web.Models.LoginViewModel
@{
    ViewData["Title"] = "Login";
}

@*@using Microsoft.AspNetCore.Identity
@using WorldLibrary.Web.Data.Entities
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager*@


<h2>Login</h2>

<div class="row">
    <div class="col-md-4 offset-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly"></div>
            <div class="form-group">
                <label asp-for="Username">Username</label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-warning"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password">Password</label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-warning"></span>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <input asp-for="RememberMe" Type="checkbox" class="form-check-input" />
                    <label asp-for="RememberMe" class="form-check-label">Remember Me?</label>
                </div>
                <span asp-validation-for="RememberMe" class="text-warning"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Login" class="btn btn-success" />
                <a asp-action="Register" class="btn btn-primary">Register New User</a>
                <a asp-action="RecoverPassword" class="btn btn-link">Forgot your password?</a>
            </div>
            <div class="form-group">
                 <fb:login-button scope="public_profile,email" onlogin="checkLoginState();"></fb:login-button>
            </div>
                       
        </form>
    </div>

   @* <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to log in.</h4>
            <hr />
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                            for details on setting up this ASP.NET application to support logging in via external services.
                        </p>
                    </div>
                }
                else
                {
                    <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>*@
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
   <script>
    function checkLoginState() {
        FB.getLoginStatus(function(response) {
            
            if (response.status === 'connected') {
                
        });
    }
   </script>
    
    }
    


